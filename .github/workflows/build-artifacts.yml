name: Build Artifacts Only

on:
  workflow_dispatch:
    inputs:
      build_version:
        description: 'Version to build (e.g., v0.1.6)'
        required: true
        default: 'v0.1.6'

jobs:
  build-mac:
    strategy:
      matrix:
        runner: [macos-latest, macos-14]  # Intel and Apple Silicon
        
    runs-on: ${{ matrix.runner }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install ImageMagick
        run: brew install imagemagick

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust target for current architecture
        run: |
          if [[ "${{ matrix.runner }}" == "macos-14" ]]; then
            rustup target add aarch64-apple-darwin
            echo "Building for Apple Silicon (aarch64)"
          else
            rustup target add x86_64-apple-darwin
            echo "Building for Intel (x86_64)"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: './image-converter/package-lock.json'

      - name: Install dependencies
        working-directory: ./image-converter
        run: npm ci

      - name: Build
        working-directory: ./image-converter  
        run: npm run tauri:build

      - name: List build artifacts
        run: find image-converter/src-tauri/target/release/bundle -name "*.dmg" -o -name "*.app"

      - name: Verify app architecture
        run: |
          # Mount the DMG and check the architecture
          DMG_PATH=$(find image-converter/src-tauri/target/release/bundle/dmg -name "*.dmg" | head -1)
          if [ -n "$DMG_PATH" ]; then
            echo "Checking architecture of: $DMG_PATH"
            hdiutil attach "$DMG_PATH" -mountpoint /tmp/verify_mount
            APP_PATH=$(find /tmp/verify_mount -name "*.app" | head -1)
            if [ -n "$APP_PATH" ]; then
              BINARY_PATH="$APP_PATH/Contents/MacOS/image-converter"
              echo "Binary path: $BINARY_PATH"
              file "$BINARY_PATH"
              lipo -info "$BINARY_PATH" || true
            fi
            hdiutil detach /tmp/verify_mount
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.runner }}
          path: image-converter/src-tauri/target/release/bundle/dmg/*.dmg
          if-no-files-found: error
