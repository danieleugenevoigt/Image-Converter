name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, macos-14] # macos-14 is ARM64, macos-latest is x64
        
    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (macOS)
        if: matrix.platform == 'macos-latest' || matrix.platform == 'macos-14'
        run: |
          brew install imagemagick

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './image-converter/src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: './image-converter/package-lock.json'

      - name: Install frontend dependencies
        working-directory: ./image-converter
        run: npm ci

      - name: Build the app
        working-directory: ./image-converter
        run: npm run tauri build

      - name: List built files
        run: |
          echo "=== Build output structure ==="
          find image-converter/src-tauri/target/release/bundle -type f -name "*.dmg" -o -name "*.app"

      - name: Upload DMG only
        uses: actions/upload-artifact@v4
        with:
          name: dmg-${{ matrix.platform }}
          path: image-converter/src-tauri/target/release/bundle/dmg/*.dmg
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Show everything
        run: |
          echo "=== Everything downloaded ==="
          find . -type f | sort
          echo "=== DMG files found ==="
          find . -name "*.dmg" -type f
          
      - name: Collect DMG files
        run: |
          mkdir -p release-files
          find . -name "*.dmg" -type f -exec cp {} release-files/ \;
          echo "=== Files ready for release ==="
          ls -la release-files/
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-files/*
          draft: true
          generate_release_notes: true
          body: |
            ## ðŸŽ‰ Image Converter v0.1.5
            
            This release adds **Apple Silicon support**! Now available for both Intel and Apple Silicon Macs.
            
            ### ðŸ“¦ Downloads
            - **Intel Macs**: Download the `x64.dmg` file
            - **Apple Silicon Macs (M1/M2/M3)**: Download the `aarch64.dmg` file
            
            ### âœ¨ What's New
            - âœ… Native Apple Silicon (ARM64) support
            - âœ… Cross-platform builds via GitHub Actions
            - âœ… Automated release process
            
            Both versions include the same features and ImageMagick support.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
