name: Test Release

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, macos-14]
        
    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (macOS)
        run: brew install imagemagick

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './image-converter/src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: './image-converter/package-lock.json'

      - name: Install frontend dependencies
        working-directory: ./image-converter
        run: npm ci

      - name: Build the app
        working-directory: ./image-converter
        run: npm run tauri:build

      - name: List built files
        run: |
          echo "=== Build output structure ==="
          find image-converter/src-tauri/target/release/bundle -type f -name "*.dmg" -o -name "*.app"

      - name: Upload DMG only
        uses: actions/upload-artifact@v4
        with:
          name: dmg-${{ matrix.platform }}
          path: image-converter/src-tauri/target/release/bundle/dmg/*.dmg
          if-no-files-found: error

  test-release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Show everything
        run: |
          echo "=== Everything downloaded ==="
          find . -type f | sort
          echo "=== DMG files found ==="
          find . -name "*.dmg" -type f
          
      - name: Test file collection
        run: |
          mkdir -p test-release
          find . -name "*.dmg" -type f -exec cp {} test-release/ \;
          echo "=== Files ready for release ==="
          ls -la test-release/
